!! Loading Chapter Code 
@cha:loading

This chapter contains the expressions to load the code described in each of the chapters. 
Such expressions can be executed in the PharoWeb 5 image (*http://files.pharo.org/mooc/image/PharoWeb-5.0.zip*) or in PharoWeb 6.1 (*http://files.pharo.org/mooc/image/PharoWeb-61.zip*).

When you start for example the chapter 4, you can load all the code of the previous chapters (1, 2, and 3) by following the process described in the following section 'Chapter 4'.

Obviously, we believe that this is better that you use you own code but having our code at hand can help you in case you would be stuck.

!!! Chapter 3: Extending and Testing the Model

You can load the correction of the previous chapter as follow: 

[[[
Metacello new 
	smalltalkhubUser: 'PharoMooc' project: 'TinyBlog'; 
	version: #chapter2solution;
	configuration: 'TinyBlog';
	load.
]]]

Run the tests!
To do so, you can use the TestRunner  (World menu > Test Runner), look for the package TinyBlog-Tests and click on "Run Selected". 
All tests should be green. 

!!! Chapter 4: Data Persitency using Voyage and Mongo

You can load the correction of the previous chapter as follow: 

[[[
Metacello new 
	smalltalkhubUser: 'PharoMooc' project: 'TinyBlog'; 
	version: #chapter3solution;
	configuration: 'TinyBlog';
	load.
]]]

Once loaded execute the tests.

!!! Chapter 5: Commencer avec Seaside

You can load the correction of the previous chapter as follow: 

[[[
Metacello new 
	smalltalkhubUser: 'PharoMooc' project: 'TinyBlog'; 
	version: #chapter4solution;
	configuration: 'TinyBlog';
	load.
]]]

Execute the tests.

To test the application, start the HTTP server:
[[[
ZnZincServerAdaptor startOn: 8080.
]]]

Open your web browser at ==http://localhost:8080/TinyBlog==

You may need to recreate some posts as follows: 

[[[
TBBlog reset ; createDemoPosts
]]]

!!! Chapitre 6: Web Components for TinyBlog

You can load the correction of the previous chapter as follow: 

[[[
Metacello new
    smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
    version: #chapter5solution;
    configuration: 'TinyBlog';
    load
]]]

Same process as above.

!!! Chapitre 7: Gestion des catégories

You can load the correction of the previous chapter as follow: 

[[[
Metacello new
    smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
    version: #chapter6solution;
    configuration: 'TinyBlog';
    load
]]]


To test the application, start the HTTP server:

[[[
ZnZincServerAdaptor startOn: 8080.
]]]

Open your web browser at ==http://localhost:8080/TinyBlog==


You may need to recreate some posts as follows: 

[[[
TBBlog reset ; createDemoPosts
]]]



!!! Chapitre 8: Authentification et Session

You can load the correction of the previous chapter as follow: 

[[[
Metacello new
    smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
    version: #chapter7solution;
    configuration: 'TinyBlog';
    load
]]]

To test the application, start the HTTP server:

[[[
ZnZincServerAdaptor startOn: 8080.
]]]

!!! Chapitre 9: Interface Web d’administration et génération automatique


You can load the correction of the previous chapter as follow: 

[[[
Metacello new
    smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
    version: #chapter8solution;
    configuration: 'TinyBlog';
    load
]]]



!!! Chapitre 10: Déploiement de TinyBlog


You can load the correction of the previous chapter as follow: 

[[[
Metacello new
    smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
    version: #chapter9solution;
    configuration: 'TinyBlog';
    load
]]]

You should create an account on PharoCloud and use your IDs in the following code:

[[[
	
ephUser :='<your PharoCloud Ephemeric login>'.
ephToken :='<your PharoCloud Ephemeric passwod>'.
	
"Seaside Deployment configuration"
WAAdmin clearAll.
WAAdmin applicationDefaults removeParent: WADevelopmentConfiguration instance.
WAFileHandler default: WAFileHandler new.
WAFileHandler default
    preferenceAt: #fileHandlerListingClass
    put: WAHtmlFileHandlerListing.
WAAdmin defaultDispatcher
    register: WAFileHandler default
    at: 'files'.
	 
"Load TinyBlog"
Gofer new
   smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
   package: 'ConfigurationOfTinyBlog';
   load.
#ConfigurationOfTinyBlog asClass loadFinalApp.

"Create Demo posts if needed"
#TBBlog asClass createDemoPosts.

"Tell Seaside to use TinyBlog as default app"
WADispatcher default defaultName: 'TinyBlog'.

"Register TinyBlog on Seaside"
TBApplicationRootComponent initialize.

Metacello new 	
	smalltalkhubUser: 'mikefilonov' project: 'EphemericCloudAPI';
	configuration: 'EphemericCloudAPI';
	load.

"deployment on PharoCloud"
client := #EphemericCloudClient asClass userID: ephUser authToken: ephToken. 
	(client publishSelfAs: 'TinyBlog') 
		ifTrue:[ ZnZincServerAdaptor startOn: 8080 ] 
		ifFalse: [ client lastPublishedInstance hostname ]
]]]

When you execute the following code (it will take some time), your Pharo image will be automatically be deployed on PharoCloud.


%!! Chapitre : Une Interface Web avec Teapot pour TinyBlog

%Vous pouvez charger la correction de la semaine précédente en exécutant le code suivant:

%[[[
%Metacello new
%    smalltalkhubUser: 'PharoMooc' project: 'TinyBlog';
%    version: #week3solution;
%    configuration: 'TinyBlog';
%    load
%]]]

%Assurez vous que votre serveur Teapot est bien stoppé.
%[[[%
%	TBTeapotWebApp stop
%]]]
%Puis, testez le code en exécutant:
%[[[
%	TBTeapotWebApp start
%]]]
% Attention, vérifiez d'abord que votre propre serveur HTTP ne soit pas déjà lancé sur le port 8081.
